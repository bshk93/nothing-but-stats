unique(c(4,2,3,3)) %>% sort()
unique(c(4,2,3,3)) %>% sort() %>% .[2]
unique(c(4,2,3,3)) %>% sort() %>% .[sample.int(length(.))]
unique(c(4,2,3,3)) %>% sort() %>% .[sample.int(length(.), 1)]
unique(c(4,2,3,3)) %>% sort() %>% .[sample.int(length(.), 1)]
unique(c(4,2,3,3)) %>% sort() %>% .[sample.int(length(.), 1)]
unique(c(4,2,3,3)) %>% sort() %>% .[sample.int(length(.), 1)]
unique(c(4,2,3,3)) %>% sort() %>% .[sample.int(length(.), 1)]
unique(c(4,2,3,3)) %>% sort() %>% .[sample.int(length(.), 1)]
shiny::runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
?dateInput
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
now()
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
gs4_auth(email = 'bshk93@gmail.com')
gs4_token()
gs4_auth(email = 'bshk93@gmail.com')
gs4_token()
gargle::gargle_oauth_cache()
options(gargle_oauth_cache = '.secrets')
drive_auth()
gs4_auth(email = 'bshk93@gmail.com')
list.files('.')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
install.packages('rsconnect')
install.packages("rsconnect")
shiny::runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
gs4_auth()
gs4_auth('bshk93@gmail.com')
remove.packages("rsconnect", lib="C:/Program Files/R/R-4.2.1/library")
library(rsconnect)
library(rsconnect)
.libPaths()
library(rsconnect)
library(rsconnect)
install.packages('rsconnect')
library(rsconnect)
shiny::runApp('C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R')
gs4_auth(
email = 'bshk93@gmail.com'
)
#gs4_deauth()
gs4_auth(
email = 'bshk93@gmail.com',
token = '.secrets/9566fe0643cfe888fecd0b72f870afec_bshk93@gmail.com'
)
install.packages(openxlsx)
install.packages('openxlsx')
library(usethsi)
library(usethis)
install.packages('usethis')
library(usethis)
use_course('sharlagelfand/creative-coding-workshop')
?use_course
use_course('sharlagelfand/creative-coding-workshop', destdir = 'C:/Users/bshk9/OneDrive/Desktop/projects/positconf/2023-steal-rtist')
use_course('sharlagelfand/creative-coding-workshop', destdir = 'C:/Users/bshk9/OneDrive/home/projects/positconf/2023-steal-rtist')
setwd("C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats")
library(tidyverse)
library(lubridate)
# Source functions ----
source("R/update.R")
# Globals ----
myseason <- "2023-24"
myplayoffdate <- "2024-04-11" # Playoff start date
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
allstats %>%
select(-ends_with('PCT')) %>%
filter(if_any(everything(), is.na))
mytestdate <- "2023-12-08"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-12"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-13"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-14"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-15"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-16"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-17"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
allstats %>%
distinct(DATE, TEAM, OPP) %>%
filter(str_detect(OPP, '^@')) %>%
group_by(DATE) %>%
mutate(n_games = n()) %>%
arrange(DATE) %>%
View
# Cleaning and building
built_allstats <- build_allstats(allstats %>% filter(DATE <= "2023-12-17"))
# Write/update output file
built_allstats %>%
filter(DATE < myplayoffdate) %>%
mutate(gametype = "REG") %>%
write_csv(glue::glue("R/allstats-{str_extract(myseason, '\\\\d{2}-\\\\d{2}')}.csv"))
install.packages('reactable')
install.packages('mailR')
shiny::runApp('R')
runApp('R')
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
whpf_leaders <- range_read(
'1gnAqiNDV0CnBut_4ckDBTERu1Nrm5dePcaNNAu1dfT8',
range = "A:B",
col_names = c('DATE', 'NAME')
) %>%
mutate(NAME = toupper(NAME))
rlang::last_trace()
ws_orders <- range_read(
'1JgyIRhnpe2f6UPFBd9KehQXJyfqmQDGH5jRzQC46cFI',
range = "A:E",
col_names = TRUE
) %>%
mutate(DATE = as_date(DATE))
googledrive::drive_auth()
whpf_leaders <- range_read(
'1gnAqiNDV0CnBut_4ckDBTERu1Nrm5dePcaNNAu1dfT8',
range = "A:B",
col_names = c('DATE', 'NAME')
) %>%
mutate(NAME = toupper(NAME))
googledrive::drive_has_token()
googledrive::drive_token()
googledrive::drive_token()
??range_read
gs4_auth()
ws_orders <- range_read(
'1JgyIRhnpe2f6UPFBd9KehQXJyfqmQDGH5jRzQC46cFI',
range = "A:E",
col_names = TRUE
) %>%
mutate(DATE = as_date(DATE))
runApp('R')
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
ws_orders <- range_read(
'1JgyIRhnpe2f6UPFBd9KehQXJyfqmQDGH5jRzQC46cFI',
range = "A:E",
col_names = TRUE
) %>%
mutate(DATE = as_date(DATE))
runApp('R')
shiny::runApp('R')
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
allstats %>%
select(-ends_with('PCT')) %>%
filter(if_any(everything(), is.na))
allstats %>%
distinct(DATE, TEAM, OPP) %>%
filter(str_detect(OPP, '^@')) %>%
group_by(DATE) %>%
mutate(n_games = n()) %>%
arrange(DATE) %>%
View
allstats %>%
distinct(DATE, TEAM, OPP) %>%
filter(str_detect(OPP, '^@')) %>%
group_by(DATE) %>%
mutate(n_games = n()) %>%
arrange(DATE) %>%
View
# Cleaning and building
built_allstats <- build_allstats(allstats %>% filter(DATE <= "2023-12-19"))
# Write/update output file
built_allstats %>%
filter(DATE < myplayoffdate) %>%
mutate(gametype = "REG") %>%
write_csv(glue::glue("R/allstats-{str_extract(myseason, '\\\\d{2}-\\\\d{2}')}.csv"))
setwd("C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R")
source("utils.R")
dfs_23_24 <- load_allstats() %>%
clean_allstats() %>%
filter(SEASON == "23-24")
dfs <- load_allstats() %>%
clean_allstats()
dfs_playoffs <- load_allstats(playoffs = TRUE) %>%
clean_allstats()
dfs_everything <- rbind(dfs, dfs_playoffs %>% select(-GAME, -ROUND))
x <- dfs_everything %>%
group_by(PLAYER, SEASON) %>%
summarize(
G = n(),
MPG = sum(M)/G,
PPG = sum(P)/G,
RPG = sum(R)/G,
APG = sum(A)/G,
SPG = sum(S)/G,
BPG = sum(B)/G,
GMSC = sum(GMSC)/G
)
x %>%
filter(SEASON == "22-23") %>%
select(-SEASON) %>%
full_join(x %>% filter(SEASON == "23-24") %>% select(-SEASON),
by = "PLAYER",
suffix = c("_2023", "_2024")) %>%
mutate(GMSC_DIFF = GMSC_2024 - GMSC_2023) %>%
View
x %>%
filter(SEASON == "22-23") %>%
select(-SEASON) %>%
full_join(x %>% filter(SEASON == "23-24") %>% select(-SEASON),
by = "PLAYER",
suffix = c("_2023", "_2024")) %>%
mutate(GMSC_DIFF = GMSC_2024 - GMSC_2023) %>%
arrange(desc(GMSC_DIFF)) %>%
filter(G_2024 >= 20) %>%
head(5)
x %>%
filter(SEASON == "22-23") %>%
select(-SEASON) %>%
full_join(x %>% filter(SEASON == "23-24") %>% select(-SEASON),
by = "PLAYER",
suffix = c("_2023", "_2024")) %>%
mutate(GMSC_DIFF = GMSC_2024 - GMSC_2023) %>%
arrange(desc(GMSC_DIFF)) %>%
filter(G_2024 >= 15) %>%
head(5)
x %>%
filter(SEASON == "22-23") %>%
select(-SEASON) %>%
full_join(x %>% filter(SEASON == "23-24") %>% select(-SEASON),
by = "PLAYER",
suffix = c("_2023", "_2024")) %>%
mutate(GMSC_DIFF = GMSC_2024 - GMSC_2023) %>%
arrange(desc(GMSC_DIFF)) %>%
filter(G_2024 >= 20) %>%
head(5)
x %>%
filter(SEASON == "22-23") %>%
select(-SEASON) %>%
full_join(x %>% filter(SEASON == "23-24") %>% select(-SEASON),
by = "PLAYER",
suffix = c("_2023", "_2024")) %>%
mutate(GMSC_DIFF = GMSC_2024 - GMSC_2023) %>%
arrange(desc(GMSC_DIFF)) %>%
filter(G_2024 >= 20) %>%
head(10)
x %>%
filter(SEASON == "22-23") %>%
select(-SEASON) %>%
full_join(x %>% filter(SEASON == "23-24") %>% select(-SEASON),
by = "PLAYER",
suffix = c("_2023", "_2024")) %>%
mutate(GMSC_DIFF = GMSC_2024 - GMSC_2023) %>%
arrange(desc(GMSC_DIFF)) %>%
filter(G_2024 >= 20) %>%
head(10) %>%
mutate(txt = str_c(
PLAYER, ' - ', PPG_2024, ' / ', RPG_2024, ' / ', APG_2024, ' / ', SPG_2024, ' / ', BPG_2024,
' - ', GMSC_2024, ' GMSC (+', GMSC_DIFF, ')'
)) %>%
pull(txt)
x %>%
filter(SEASON == "22-23") %>%
select(-SEASON) %>%
full_join(x %>% filter(SEASON == "23-24") %>% select(-SEASON),
by = "PLAYER",
suffix = c("_2023", "_2024")) %>%
mutate(GMSC_DIFF = GMSC_2024 - GMSC_2023) %>%
arrange(desc(GMSC_DIFF)) %>%
filter(G_2024 >= 20) %>%
head(10) %>%
mutate(txt = str_c(
PLAYER, ' - ', round(PPG_2024, 2), ' / ', round(RPG_2024, 2), ' / ', round(APG_2024, 2), ' / ', round(SPG_2024, 2), ' / ', round(BPG_2024, 2),
' - ', round(GMSC_2024, 2), ' GMSC (+', round(GMSC_DIFF, 2), ')'
)) %>%
pull(txt)
str_length("GILGEOUS-ALEXANDER, SHAI")
rep(' ', 3)
setwd("C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats")
library(tidyverse)
library(lubridate)
# Source functions ----
source("R/update.R")
# Globals ----
myseason <- "2023-24"
myplayoffdate <- "2024-04-11" # Playoff start date
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
allstats %>%
select(-ends_with('PCT')) %>%
filter(if_any(everything(), is.na))
mytestdate <- "2023-12-17"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-18"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-19"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-20"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-21"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-22"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
allstats %>%
select(-ends_with('PCT')) %>%
filter(if_any(everything(), is.na))
mytestdate <- "2023-12-22"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-21"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2023-12-20"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
allstats %>%
distinct(DATE, TEAM, OPP) %>%
filter(str_detect(OPP, '^@')) %>%
group_by(DATE) %>%
mutate(n_games = n()) %>%
arrange(DATE) %>%
View
# Cleaning and building
built_allstats <- build_allstats(allstats %>% filter(DATE <= "2023-12-22"))
# Write/update output file
built_allstats %>%
filter(DATE < myplayoffdate) %>%
mutate(gametype = "REG") %>%
write_csv(glue::glue("R/allstats-{str_extract(myseason, '\\\\d{2}-\\\\d{2}')}.csv"))
runApp('R')
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Cleaning and building
built_allstats <- build_allstats(allstats %>% filter(DATE <= "2023-12-22"))
# Write/update output file
built_allstats %>%
filter(DATE < myplayoffdate) %>%
mutate(gametype = "REG") %>%
write_csv(glue::glue("R/allstats-{str_extract(myseason, '\\\\d{2}-\\\\d{2}')}.csv"))
runApp('R')
runApp('R')
x <- 'cyl'
mtcars
mtcars %>% arrange({{ x }})
mtcars %>% arrange_at(x)
mtcars %>% arrange_at(desc(x))
mtcars
mtcars %>% arrange_at(desc(x))
mtcars %>% arrange_at(-x)
mtcars %>% arrange_at(-1*x)
mtcars %>% arrange_at(desc({{ x}}))
mtcars %>% arrange_at(x)
mtcars %>% arrange_at(x) %>% arrange(desc(row_number()))
x <- 'newvar'
mtcars %>% select(x := disp)
mtcars %>% select(x := disp, cyl)
mtcars %>% select(var_{x} := disp, cyl)
mtcars %>% select({x} := disp, cyl)
mtcars %>% select(x := disp, cyl)
x
mtcars %>% select({{ x }} := disp, cyl)
mtcars %>% select({{ str_c(x, '1') }} := disp, cyl)
mtcars %>% select({{ x }} := disp, 'cyl')
mtcars %>% mutate(RANK = rank('cyl', ties.method = 'in'))
mtcars %>% mutate(RANK = rank('cyl', ties.method = 'min'))
x <- 'cyl'
mtcars %>% mutate(RANK = rank(x, ties.method = 'min'))
mtcars %>% mutate(RANK = rank({{ x }}, ties.method = 'min'))
mtcars %>% mutate(RANK = rank(cyl, ties.method = 'min'))
mtcars %>% mutate(RANK = rank(!! x, ties.method = 'min'))
mtcars %>% mutate(RANK = rank(!!x, ties.method = 'min'))
mtcars %>% mutate(RANK = rank(!!!x, ties.method = 'min'))
mtcars %>% mutate(RANK = rank(get(x), ties.method = 'min'))
mtcars %>% mutate(test = round(get(x), 1))
runApp('R')
runApp('R')
setwd("C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats")
library(tidyverse)
library(lubridate)
# Source functions ----
source("R/update.R")
# Globals ----
myseason <- "2023-24"
myplayoffdate <- "2024-04-11" # Playoff start date
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
# Refresh stats ----
# Pull down and check allstats, extracting data from Google sheets
allstats <- get_allstats(delete_before = "2023-07-01")
allstats %>%
select(-ends_with('PCT')) %>%
filter(if_any(everything(), is.na))
mytestdate <- "2023-12-31"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2024-01-01"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2024-01-02"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2024-01-03"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
mytestdate <- "2024-01-04"
allstats %>% filter(DATE == mytestdate) %>%
distinct(PLAYER) %>%
anti_join(allstats %>% filter(DATE < mytestdate) %>% distinct(PLAYER))
allstats %>%
distinct(DATE, TEAM, OPP) %>%
filter(str_detect(OPP, '^@')) %>%
group_by(DATE) %>%
mutate(n_games = n()) %>%
arrange(DATE) %>%
View
setwd("C:/Users/Brian/OneDrive/home/projects/nbn/nothing-but-stats")
setwd("C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats")
setwd("C:/Users/Brian/OneDrive/home/projects/nbn/nothing-but-stats/R")
source("utils.R")
setwd("C:/Users/bshk9/OneDrive/home/projects/nbn/nothing-but-stats/R")
source("utils.R")
dfs_23_24 <- load_allstats() %>%
clean_allstats() %>%
filter(SEASON == "23-24")
dfs_23_24 %>% tail
dfs_23_24 %>% arrange(DATE) %>% tail
runApp()
rsconnect::deployApp(forceUpdate = TRUE,
appName = "nothing-but-stats")
install.packages("rsconnect")
shiny::runApp()
?rsconnect::forgetDeployment()
rsconnect::forgetDeployment()
install.packages("shiny")
shiny::runApp()
